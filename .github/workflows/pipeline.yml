name: Java Web App Build and deploy to EKS
on: [push, workflow_dispatch]
env:
  ECR_REPOSITORY: ${{ secrets.ECR_REPO }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  EKS_Cluster_Name: rak-prod-eksdemo

jobs:
  build:
    runs-on: eks_runner
    permissions:
      id-token: write
      contents: read
    steps:
      # Checkout Code
      - name: Get code
        uses: actions/checkout@v3
      
      - name: Get short SHA
        id: commit
        run: echo "::set-output name=sha7::${GITHUB_SHA::7}"

      # AWS Authentication
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHub_Actions_Role
          aws-region: ${{env.AWS_REGION}}
      
      # Login in Amazon ECR
      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      
      # Build, tag, and push docker image to Amazon ECR
      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ steps.commit.outputs.sha7 }}
        run: |
          docker build -t $REGISTRY/$ECR_REPOSITORY:latest -f java-web-app/Dockerfile java-web-app/
          docker build -t $REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f java-web-app/Dockerfile java-web-app/

          docker push $REGISTRY/$ECR_REPOSITORY:latest
          docker push $REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      
      # Deploying latest image to EKS Cluster
      - name: Update kubeconfig
        run: |
          sudo apt install unzip -y
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install
          aws eks update-kubeconfig --name ${{env.EKS_Cluster_Name}} --region ${{ env.AWS_REGION }}

      - name: Deploy to EKS
        run: |
          kubectl get pods -n actions