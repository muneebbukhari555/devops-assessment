name: Java Web App Build and deploy to EKS
on: push
env:
  ECR_REPOSITORY: ${{ secrets.ECR_REPO }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  EKS_Cluster_Name: rak-prod-eksdemo
  APP_NAME: java-web-app

jobs:
  build:
    runs-on: eks_runner
    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    permissions:
      id-token: write
      contents: read
    steps:
      # Checkout Code
      - name: Get code
        uses: actions/checkout@v4
              
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: maven

      - name: Run the Maven verify phase
        run: mvn --batch-mode --update-snapshots verify
      
      - name: Get short SHA
        id: commit
        run: echo "::set-output name=sha7::${GITHUB_SHA::7}"
      
        # AWS Authentication
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHub_Actions_CICD_Role
          aws-region: ${{env.AWS_REGION}}
      
      # Login in Amazon ECR
      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      
      # Build, tag, and push docker image to Amazon ECR
      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ steps.commit.outputs.sha7 }}
        run: |
          docker build -t $REGISTRY/$ECR_REPOSITORY:latest -f java-web-app/Dockerfile java-web-app/
          docker build -t $REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f java-web-app/Dockerfile java-web-app/

          docker push $REGISTRY/$ECR_REPOSITORY:latest
          docker push $REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      
      # Deploying latest image to EKS Cluster
      - name: Update kubeconfig
        run: |
          sudo apt install unzip -y
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip

          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256"
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
          
          sudo ./aws/install
          aws eks update-kubeconfig --name ${{env.EKS_Cluster_Name}} --region ${{ env.AWS_REGION }}

      - name: Deploy to EKS
        env:
          IMAGE_TAG: ${{ steps.commit.outputs.sha7 }}
        run: |
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh

          sed -i.bak "s|IMAGE_TAG|$IMAGE_TAG|g" Helm_Chart/${{env.APP_NAME}}/values.yaml
          helm upgrade --install ${{env.APP_NAME}} \
          --namespace ${{env.APP_NAME}} \
          --create-namespace \
          ./Helm_Chart/${{env.APP_NAME}}
        